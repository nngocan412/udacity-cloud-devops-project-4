name: Backend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from github
      - uses: actions/checkout@v3

      # Set up Python environment
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Install the pipenv dependencies
      - run: pip install pipenv

      # Install backend dependencies
      - run: cd starter/backend && pipenv install

      # Run the tests.
      - run: cd starter/backend && pipenv run test

      # Log message at complete
      - run: |
          echo "Done test step without error"

  lint:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from github
      - uses: actions/checkout@v3

      # Set up Python environment
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Install the pipenv dependencies
      - run: pip install pipenv

      # Install backend dependencies
      - run: cd starter/backend && pipenv install && pipenv install -d

      # Run the linter
      - run: cd starter/backend && pipenv run lint

      # Log message at complete
      - run: |
          echo "Done lint step without error"

  build:
    runs-on: ubuntu-latest

    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}

    needs: [test, lint]

    environment:
      name: DEV

    steps:
      # Check out the code from github
      - uses: actions/checkout@v3

      # Set up Python environment
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Install the pipenv dependencies
      - run: pip install pipenv

      # Install backend dependencies
      - run: cd starter/backend && pipenv install && pipenv install -d

      # Build BE application with docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: starter/backend
          push: true
          tags: ttx412/mp-backend:latest

      # Log message at complete
      - run: |
          echo "Done build step without error"
